{
  "Auth": {
    "login": "Login",
    "loginTitle": "Login to your account",
    "loginSubtitle": "Welcome back! Please enter your credentials.",
    "noAccount": "Don't have an account?",
    "register": "Register",
    "registerTitle": "Create your account",
    "registerSubtitle": "Sign up to get started.",
    "haveAccount": "Already have an account?",
    "registering": "Registering...",
    "confirmPassword": "Confirm Password",
    "passwordMismatch": "Passwords do not match.",
    "email": "Email",
    "password": "Password",
    "username": "Username",
    "loggingIn": "Logging in..."
  },
  "HomePage": {
    "title": "Hello world!",
    "hero": {
      "welcome": "Welcome to",
      "title": "Next.js Starter",
      "description": "Build faster with our powerful Next.js starter! Packed with essential tools like state management, React Query, I18n, CI/CD, and customizable UI components, it's everything you need to kickstart scalable, high-performance projects effortlessly.",
      "buttons": {
        "getStarted": "Get Started",
        "viewGithub": "View on GitHub"
      }
    },
    "features": {
      "title": {
        "prefix": "Why Choose",
        "suffix": "This Starter?"
      },
      "description": "Boost your development process with a powerful, feature-rich Next.js starter designed for speed, scalability, and developer productivity. Here's what makes it stand out:",
      "items": {
        "openSource": {
          "name": "Free and Open-Source",
          "summary": "Build, customize, and innovate freely!",
          "description": "Our Next.js starter is fully open-source, allowing you to contribute, adapt, and stay in sync with the latest industry standards—all without any cost."
        },
        "devStack": {
          "name": "Modern Development Stack",
          "summary": "Experience seamless development with Next.js, React, and TypeScript.",
          "description": "Our starter is designed with scalability in mind, featuring React Query for data fetching, Redux for state management, and Tailwind CSS for rapid UI styling."
        },
        "stateManagement": {
          "name": "Optimized State Management",
          "summary": "Handle complex state easily with Redux and React Query.",
          "description": "This combination ensures efficient data fetching, caching, and global state management, making your applications fast and responsive."
        },
        "i18n": {
          "name": "Internationalization (i18n)",
          "summary": "Expand your project's reach across the globe with built-in i18n support.",
          "description": "Effortlessly localize your app to enhance user experience and attract a diverse audience with minimal setup."
        },
        "cicd": {
          "name": "Robust CI/CD & Testing Setup",
          "summary": "Focus on development while our GitHub Actions pipeline handles automated testing, linting, and deployment checks.",
          "description": "Unit, integration, and end-to-end testing are integrated for a rock-solid foundation."
        },
        "devEnv": {
          "name": "Developer-First Environment",
          "summary": "Enjoy a clean, maintainable codebase with tools like ESLint, Prettier, and TypeScript.",
          "description": "Our starter is optimized for productivity, including reusable UI components, hooks, and a modular architecture designed for fast, scalable development."
        }
      }
    },
    "stack": {
      "title": "Tech Stack",
      "overview": "Overview",
      "description": "Boost your development process with a powerful, feature-rich Next.js starter designed for speed, scalability, and developer productivity. Here's what makes it stand out:",
      "features": {
        "nextjs": {
          "title": "Next.js",
          "description": "Fast by default, with config optimized for performance."
        },
        "tailwind": {
          "title": "Tailwind CSS",
          "description": "A utility-first CSS framework for rapid UI development."
        },
        "eslint": {
          "title": "ESlint & Prettier",
          "description": "For clean, consistent, and error-free code."
        },
        "typescript": {
          "title": "Extremely strict TypeScript",
          "description": "Leveraging TypeScript for unmatched type safety and robust application development."
        },
        "testing": {
          "title": "Jest & React Testing Library",
          "description": "For rock-solid unit and integration tests."
        },
        "cypress": {
          "title": "Cypress",
          "description": "Utilizing Cypress to ensure seamless user experiences through reliable and efficient testing workflows."
        },
        "storybook": {
          "title": "Storybook",
          "description": "Create, test, and showcase your components."
        },
        "git": {
          "title": "Conventional commits git hook",
          "description": "Keep your commit history neat and tidy."
        },
        "imports": {
          "title": "Absolute imports",
          "description": "No more spaghetti imports."
        },
        "chakra": {
          "title": "Chakra UI",
          "description": "Headless UI components for endless customization."
        },
        "cicd": {
          "title": "Streamlined CI/CD Workflows",
          "description": "Harnessing GitHub Actions to automate builds, tests, and deployments with precision and efficiency."
        },
        "redux": {
          "title": "State Management Simplified",
          "description": "Empowering applications with Redux for predictable and scalable state management solutions."
        }
      }
    }
  },
  "Header": {
    "navigation": {
      "home": "Home",
      "features": "Features",
      "techStack": "Tech Stack"
    }
  },
  "Footer": {
    "copyright": "Copyright © {year} NextJS StarterKit. All rights reserved."
  },
  "InitSuperUser": {
    "title": "Initialize First Admin",
    "username": "Username",
    "email": "Email",
    "password": "Password",
    "confirmPassword": "Confirm Password",
    "createAdmin": "Create Admin",
    "creating": "Creating...",
    "passwordsNoMatch": "Passwords do not match.",
    "createFailed": "Failed to create superuser",
    "success": "Superuser created successfully!"
  },
  "AdminDashboard": {
    "title": "Admin Dashboard",
    "userManagement": "User Management",
    "statistics": "Statistics",
    "systemSettings": "System Settings"
  },
  "AdminUserTable": {
    "fetchError": "Failed to load users",
    "createSuccess": "User created successfully",
    "createFail": "Failed to create user",
    "editSuccess": "User updated successfully",
    "editFail": "Failed to update user",
    "deleteSuccess": "User deleted successfully",
    "deleteFail": "Failed to delete user",
    "toggleAdminSuccess": "Admin status changed",
    "toggleAdminFail": "Failed to change admin status",
    "noUser": "No users found",
    "addUser": "Add User",
    "username": "Username",
    "email": "Email",
    "password": "Password",
    "admin": "Admin",
    "recordings": "Recordings",
    "storage": "Storage",
    "actions": "Actions",
    "edit": "Edit",
    "delete": "Delete",
    "toggleAdmin": "Toggle admin",
    "editUser": "Edit User",
    "cancel": "Cancel",
    "create": "Create",
    "save": "Save",
    "confirmDelete": "Confirm delete user",
    "confirmDeleteMsg": "Are you sure you want to delete this user?"
  },
  "AdminStats": {
    "fetchError": "Failed to load statistics",
    "noStats": "No statistics data",
    "title": "System Statistics",
    "totalUsers": "Total Users",
    "totalRecordings": "Total Recordings",
    "totalStorage": "Total Storage",
    "totalQueries": "Total Queries",
    "statusDistribution": "Recording Status Distribution",
    "completed": "Completed",
    "processing": "Processing",
    "pending": "Pending",
    "failed": "Failed",
    "topUsers": "Top Users by Storage",
    "username": "Username",
    "storage": "Storage",
    "recordings": "Recordings",
    "noTopUsers": "No data available"
  },
  "AdminSettings": {
    "fetchError": "Failed to load settings",
    "noSettings": "No settings found",
    "title": "System Settings",
    "key": "Key",
    "value": "Value",
    "description": "Description",
    "type": "Type",
    "updatedAt": "Updated At",
    "actions": "Actions",
    "edit": "Edit",
    "editSetting": "Edit Setting",
    "cancel": "Cancel",
    "save": "Save",
    "updateSuccess": "Update successful",
    "updateFail": "Update failed"
  },
  "UserDashboard": {
    "title": "User Dashboard"
  },
  "UserHeader": {
    "upload": "New Upload",
    "profile": "Profile",
    "logout": "Logout"
  },
  "UserSidebar": {
    "recordings": "Recordings",
    "upload": "New Upload",
    "search": "Search...",
    "sort": "Sort",
    "meetingDate": "Meeting Date",
    "uploadDate": "Upload Date",
    "tips": "Tip: date:today, date:thisweek",
    "noRecordings": "No recordings",
    "completed": "Completed",
    "processing": "Processing",
    "pending": "Pending",
    "failed": "Failed"
  },
  "RecordingList": {
    "noData": "No recordings",
    "completed": "Completed",
    "processing": "Processing",
    "pending": "Pending",
    "failed": "Failed"
  },
  "RecordingDetail": {
    "close": "Close",
    "participants": "Participants:",
    "date": "Date:",
    "completed": "Completed",
    "processing": "Processing",
    "pending": "Pending",
    "failed": "Failed"
  },
  "UploadModal": {
    "uploadTitle": "Upload new recording",
    "close": "Close",
    "upload": "Upload",
    "success": "Upload successful!",
    "error": "Upload failed!"
  },
  "EmptyState": {
    "selectTitle": "Select a Recording",
    "selectDescription": "Choose a recording from the sidebar to view its transcription and summary",
    "uploadButton": "Upload New Recording"
  }
}
